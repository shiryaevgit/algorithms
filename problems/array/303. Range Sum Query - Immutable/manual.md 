```variant#1
type NumArray struct {
	prefixSum []int
}

func Constructor(nums []int) NumArray {
	n := len(nums)
	prefixSum := make([]int, n+1)
	for i := 0; i < n; i++ {
		prefixSum[i+1] = prefixSum[i] + nums[i]
	}
	return NumArray{prefixSum: prefixSum}
}

func (this *NumArray) SumRange(left int, right int) int {

	return this.prefixSum[right+1] - this.prefixSum[left]
}

```

Оценка по времени: O(n), где n - длинна среза
Constructor - O(n)
SumRange - O(1)

Оценка по памяти: O(n)
создаем массив prefixSum

Объяснение решения:
1. Вычисляем префиксную сумму
2. Возвращаем разницу между двумя элементами из префиксного массива 


```variant#2

```