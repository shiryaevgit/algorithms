```variant#1
func pivotIndex(nums []int) int {
    sum,lsum,rsum:=0,0,0

    for _,v := range nums{
        sum+=v
    }

    for i,v := range nums {
        rsum = sum -lsum - v
        if rsum == lsum{
            return i
        }   
    lsum+=v
    }
    return -1
}
```

Оценка по времени: 
O(n), где n - количество элементов
Объяснения:
в функции два цикла, поэтому O(2n)

Оценка по памяти:  
O(1)
Объяснения:
используется постоянное количество памяти, новая не аллоцируется


Объяснение решения:
Идея в том что, вычислить сумму всех элементов, затем в цикле проверять
равна ли сумма всех элементов слева от искомого числа, сумме справа от него

1. вычисляем сумму всех элементов
2. в цикле вычисляем сумму элементов слева от искомого
3. сравниваем с суммой всех элементов справа-искомое
4. если истина возвращаем индекс элемента, если нет -1 


```variant#2

```