```variant#1
func solve(A [][]int) int {

	points := make([][]int, 0, len(A))

	// заполняем points
	for _, elem := range A {
		points = append(points, []int{elem[0], 1})
		points = append(points, []int{elem[1], -1})
	}



	sort.Slice(points, func(i, j int) bool {
		return points[i][0] < points[j][0]
	})


	maxRoomNum := 0
	currRoomNum := 0

	//
	for _, point := range points {
		currRoomNum += point[1]
		if currRoomNum > maxRoomNum {
			maxRoomNum = currRoomNum
		}
	}

	return maxRoomNum
}




```

Оценка по времени: O(n log n), где n - количество интервалов  
Объяснения:


В худшем:
В лучшем: 

Оценка по памяти:
O(n)

Объяснение решения:
1. 

```variant#2

```