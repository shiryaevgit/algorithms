```variant#1

func searchRange(nums []int, target int) []int {
	l, r := 0, len(nums)
	res := []int{-1, -1}
	
	if len(nums)==0{
		return res
	}

	for r-l > 1 {
		m := (l + r) / 2

		if nums[m] <= target {
			l = m
		} else {
			r = m
		}
	}
	if nums[l] == target {
		res[0] = l - 1
	} else {
		return res
	}

	for r-l > 1 {
		m := (l + r) / 2
		if nums[m] >= target {
			r = m
		} else {
			l = m
		}
	}
	res[1] = r - 1

	return res
}


```

Оценка по времени: O(log n), где n - количество элементов 
Объяснения:

В худшем: 
В лучшем: при nums{}

Оценка по памяти:  
O(1)

Объяснение решения:
Для того чтобы вернуть индексы первого и последнего таргета:
1. Делаем два бинарных поиска, для первого и второго элемента
2. 

```variant#2

```